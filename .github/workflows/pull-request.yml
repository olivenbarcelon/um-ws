# This is a basic workflow to help you get started with Actions

name: Pull Request Testing

# Controls when the workflow will run
on:
  pull_request:
    branches: [ master, develop, staging ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "pull-request-testing"
  pull-request-testing:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container:
      image: kirschbaumdevelopment/laravel-test-runner:7.3

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Validate composer.json and composer.lock
        run: |
          cd project
          composer validate
      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: project/vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-
      - name: Install dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: |
          cd project
          composer install --prefer-dist --no-progress
      - name: Execute tests (Unit and Feature tests) via PHPUnit
        run: |
          cd project
          XDEBUG_MODE=coverage vendor/bin/phpunit --coverage-clover coverage.xml
      - name: Upload reports to codecov
        run: |
          export CODECOV_TOKEN="${{ secrets.CODECOV_TOKEN }}"
          bash <(curl -s https://codecov.io/bash)